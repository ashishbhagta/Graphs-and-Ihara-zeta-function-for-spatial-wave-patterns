package squarerandom;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.ThreadLocalRandom;

/* This program writes an array to a text file generated by a given scenario before doing counting.
 * The programs depends on this program generated file is Count,Writerafter,Createimage.So,
 * before running them it is necessary to execute this one .
 * 
 *  In this code inputs are row,m,n.
 *  row stands for size of array
 *  m and n are parameters used in function
 *  
 *  You also have to change the file path according to your system*/

public class Writerbefore
{
	int row=1000,m=9,n=9;
	
	int i;
	int[][] rand=new int[row][row];
	private void operate() 
	{
		// TODO Auto-generated method stub
		for (int i = 0; i < row; i=i+2) 
		{
			for (int j = 0; j < row; j=j+2)
			{
				int a=ThreadLocalRandom.current().nextInt(0, 2 + 1);
				choose(a,i,j);
			}
		}
		
	}
	// This method is used to choose from three cases of square random matrix.That are four,three,two.
	private void choose(int a,int i, int j) 
	{
		// TODO Auto-generated method stub
	
          switch(a)
         {
             case 0: 
            	
            	int b=ThreadLocalRandom.current().nextInt(0, 1 + 1);
            	  four(b,i,j);
                  break;
            	  
             case 1:
            
                int c=ThreadLocalRandom.current().nextInt(0, 3 + 1);
                 three(c,i,j);
                 break;
                 
             case 2:
            	
            	 int d=ThreadLocalRandom.current().nextInt(0, 5 + 1);
            	 two(d,i,j);
         }
	}
	// This method choose from the different cases occurred in four scenario.
	private void four(int b,int i,int j) 
	{
		// TODO Auto-generated method stub
		switch(b)
		{
		case 0:
			
					rand[i][j]=1;
					rand[i][j+1]=1;
					rand[i+1][j]=1;
					rand[i+1][j+1]=1;
				
			break;
		case 1:
			
			rand[i][j]=0;
			rand[i][j+1]=0;
			rand[i+1][j]=0;
			rand[i+1][j+1]=0;
			
			break;
		}
	}
	// This method choose from the different cases occurred in three scenario.
	private void three(int c,int i,int j) 
	{
		// TODO Auto-generated method stub
		switch(c)
		{
		case 0:
			
			rand[i][j]=0;
			rand[i][j+1]=1;
			rand[i+1][j]=1;
			rand[i+1][j+1]=1;
			break;
		case 1:
			
			rand[i][j]=1;
			rand[i][j+1]=0;
			rand[i+1][j]=1;
			rand[i+1][j+1]=1;
			break;
		case 2:
	
			rand[i][j]=1;
			rand[i][j+1]=1;
			rand[i+1][j]=0;
			rand[i+1][j+1]=1;
			break;
		case 3:
		
			rand[i][j]=1;
			rand[i][j+1]=1;
			rand[i+1][j]=1;
			rand[i+1][j+1]=0;
			break;
		}

	}
	// This method choose from the different cases occurred in two scenario.
	private void two(int d,int i,int j)
	{
		// TODO Auto-generated method stub
		switch(d)
		{
		case 0:
		
			rand[i][j]=0;
			rand[i][j+1]=0;
			rand[i+1][j]=1;
			rand[i+1][j+1]=1;
			break;
		case 1:
			
			rand[i][j]=1;
			rand[i][j+1]=0;
			rand[i+1][j]=1;
			rand[i+1][j+1]=0;
			break;
		case 2:
		
			rand[i][j]=1;
			rand[i][j+1]=1;
			rand[i+1][j]=0;
			rand[i+1][j+1]=0;
			break;
		case 3:
		
			rand[i][j]=0;
			rand[i][j+1]=1;
			rand[i+1][j]=0;
			rand[i+1][j+1]=1;
			break;
		case 4:
			
			rand[i][j]=0;
			rand[i][j+1]=1;
			rand[i+1][j]=1;
			rand[i+1][j+1]=0;
			break;
		case 5:
	
			rand[i][j]=1;
			rand[i][j+1]=0;
			rand[i+1][j]=0;
			rand[i+1][j+1]=1;
			break;
		}
	}
	// This method writes the generated matrix to a text file.
	private void write() throws IOException 
	{
		// TODO Auto-generated method stub
		StringBuilder builder = new StringBuilder();

		for(int i = 0; i < row; i++)
		{
		for(int j = 0; j < row; j++)
		{
		builder.append(rand[i][j]+"");//append to the output string
		if(j < row - 1)//if this is not the last row element
		builder.append(",");// separator used in between elements 
		}
		builder.append("\n");//append new line at the end of the row
		}
		BufferedWriter writer = new BufferedWriter(new FileWriter("sqrrnd/"+m+","+n+"sqrrndbfr.txt"));// file name for generated file
		writer.write(builder.toString());//save the string representation of the board
		writer.close();
		System.out.println("saved");
	}
	public static void main(String[] args) throws IOException 
	{
		Writerbefore n=new Writerbefore();
		n.operate();
		n.write();
		DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
		Date date = new Date();
		System.out.println(dateFormat.format(date));
	}

}
